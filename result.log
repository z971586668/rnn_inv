************************************************************************************
Verifying benchmark: my_test.c
/usr/bin/clang-3.6 -c -emit-llvm -D__SEAHORN__ -fgnu89-inline -m32 -I./build/run/include -o /tmp/sea-0DIhbc/my_test.bc my_test.c
/home/ylzhang/rnn_inv/build/run/bin/seapp -o /tmp/sea-0DIhbc/my_test.pp.bc --strip-extern=false --kill-vaarg=true -log none /tmp/sea-0DIhbc/my_test.bc
/home/ylzhang/rnn_inv/build/run/bin/seapp -o /tmp/sea-0DIhbc/my_test.pp.ms.bc --horn-mixed-sem --ms-reduce-main /tmp/sea-0DIhbc/my_test.pp.bc
/home/ylzhang/rnn_inv/build/run/bin/seaopt -f -funit-at-a-time -o /tmp/sea-0DIhbc/my_test.pp.ms.o.bc -O3 --enable-indvar=false --enable-loop-idiom=false --enable-nondet-init=false --unroll-threshold=150 --disable-loop-vectorization=true --disable-slp-vectorization=true --vectorize-slp-aggressive=false /tmp/sea-0DIhbc/my_test.pp.ms.bc
/home/ylzhang/rnn_inv/build/run/bin/seahorn --keep-shadows=true --horn-solve -horn-inter-proc -horn-sem-lvl=mem --horn-step=large -log none /tmp/sea-0DIhbc/my_test.pp.ms.o.bc --horn-answer --horn-stats --horn-ice --horn-ice-svm-c-paramter=10 --horn-ice-c5-exec-path=C50/c5.0.dt_entropy --horn-ice-svm-exec-path=libsvm/svm-invgen --horn-ice-svm-coeff-bound=5 --horn-rule-sample-length=1 --horn-ice-svm-call-freq-pos=0 --horn-ice-svm-call-freq-neg=30
verify horn rule : main@verifier.error.split <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  1)
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  0)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_1 () Int
  0)
(define-fun main@%_8_0 () Int
  0)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  0)
(define-fun main@%current.2.i.4_3 () Int
  0)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  0)
(define-fun main@%current.0.i.lcssa_0 () Int
  0)
(define-fun main@%_4_0 () Int
  1)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  (- 1))
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(1,0,0,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 0
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: false <- (false&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and false
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_2 main@%i.0.i3_2 main@%current.0.i4_2) <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (false&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and false
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%_5_0 () Bool
  true)
(define-fun main@.lr.ph.preheader_0 () Bool
  true)
(define-fun main@entry_0 () Bool
  true)
(define-fun main@%_0_0 () Int
  0)
(define-fun main@%_1_0 () Int
  0)
(define-fun main@%_2_0 () Int
  1)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%current.0.i4_1 () Int
  1)
(define-fun main@%input.0.i5_1 () Int
  1)
(define-fun main@%i.0.i3_0 () Int
  1)
(define-fun main@%_4_0 () Int
  2)
(define-fun @unknown_0 () Int
  0)
(define-fun main@%_3_0 () Int
  0)
(0,) -> (2,1,1,1,)
find pos cex
SVM based Hyperlane Learning!
POS CEX, INDEX IS 1
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: true <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (not true))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  1)
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  0)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_1 () Int
  0)
(define-fun main@%_8_0 () Int
  0)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  0)
(define-fun main@%current.2.i.4_3 () Int
  0)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  0)
(define-fun main@%current.0.i.lcssa_0 () Int
  0)
(define-fun main@%_4_0 () Int
  1)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  (- 1))
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(1,0,0,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 2
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(main@%input.0.i5_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%input.0.i5_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 2))
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%_22_0 () Int
  2)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  (- 1))
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 2))
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  (- 5))
(define-fun main@%current.2.i.4_4 () Int
  (- 3))
(define-fun main@%current.0.i.lcssa_1 () Int
  (- 1))
(define-fun main@%_8_0 () Int
  (- 1))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_3 () Int
  (- 5))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 1))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 1))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_0 () Int
  (- 1))
(define-fun main@%_4_0 () Int
  0)
(define-fun main@%_20_0 () Int
  (- 10))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 4))
(define-fun main@%_12_0 () Int
  (- 3))
(define-fun main@%_14_0 () Int
  (- 6))
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(0,1,0,-2,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 3
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(main@%i.0.i3_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%i.0.i3_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  (- 1))
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  (- 3))
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%_8_0 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_1 () Int
  (- 1))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_3 () Int
  (- 3))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 1))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 1))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_0 () Int
  (- 1))
(define-fun main@%_4_0 () Int
  0)
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  38600)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 2))
(define-fun main@%_12_0 () Int
  (- 2))
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  38601)
(0,0,38600,-1,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 4
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 0))))
  (and true
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%_22_0 () Int
  2)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  1)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  2)
(define-fun main@%_15_0 () Int
  1)
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%current.0.i.lcssa_1 () Int
  1)
(define-fun main@%_8_0 () Int
  1)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  1)
(define-fun main@%current.2.i.4_3 () Int
  1)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  1)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  2)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  1)
(define-fun main@%current.0.i.lcssa_0 () Int
  1)
(define-fun main@%_4_0 () Int
  2)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(2,1,0,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 5
C5 learn 
Rule Verification Round 5
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(main@%current.0.i4_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_2 main@%i.0.i3_2 main@%current.0.i4_2) <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: (true&&(!(main@%current.0.i4_2<=0))) <- ((true&&(!(main@%current.0.i4_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not (and true (not (<= main@%current.0.i4_2 0)))))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%current.0.i4_1 () Int
  0)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  1)
(define-fun main@%input.0.i5_0 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%_8_0 () Int
  0)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  0)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  1)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%current.0.i4_2 () Int
  0)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  0)
(define-fun main@%_20_0 () Int
  1)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  2)
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  1)
(define-fun main@%_23_0 () Int
  1)
(define-fun main@%_22_0 () Int
  0)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%input.0.i5_1 () Int
  0)
(define-fun main@%i.0.i3_2 () Int
  1)
(define-fun main@%input.0.i5_2 () Int
  0)
(define-fun main@%_4_0 () Int
  1)
(1,-1,0,1,) -> (1,0,1,0,)
ICE ICE 0
NEG CEX, INDEX IS 6
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: (true&&(!(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1))) <- ((true&&(!(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1))))
  (not (and true a!1))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@%_14_0 () Int
  15)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  2)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 2))
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  21)
(define-fun main@%input.0.i5_0 () Int
  (- 3))
(define-fun main@%_22_0 () Int
  (- 2))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  5)
(define-fun main@%_21_0 () Int
  2)
(define-fun main@%_15_0 () Int
  12)
(define-fun main@%current.2.i.4_4 () Int
  8)
(define-fun main@%_8_0 () Int
  2)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  12)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  2)
(define-fun main@%current.2.i.4_2 () Int
  2)
(define-fun main@%_18_0 () Int
  2)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  2)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%current.0.i4_2 () Int
  2)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  2)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  2)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@%input.0.i5_1 () Int
  (- 2))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  11)
(define-fun main@%_12_0 () Int
  8)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%_23_0 () Int
  1)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%i.0.i3_2 () Int
  1)
(define-fun main@%_4_0 () Int
  (- 1))
(-1,-3,0,5,) -> (-1,-2,1,2,)
ICE ICE 0
NEG CEX, INDEX IS 7
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%i.0.i3_2<=0)
  !(main@%current.0.i4_2<=0)
] <- ([&&
  true
  !(main@%i.0.i3_0<=0)
  !(main@%current.0.i4_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not (and true (not (<= main@%i.0.i3_2 0)) (not (<= main@%current.0.i4_2 0)))))
(assert (and true
     (not (<= main@%i.0.i3_0 0))
     (not (<= main@%current.0.i4_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  true)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  0)
(define-fun main@%_23_0 () Int
  4)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  4)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  4)
(define-fun main@%input.0.i5_0 () Int
  (- 4))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  (- 2))
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%_8_0 () Int
  (- 3))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  (- 2))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  3)
(define-fun main@%i.0.i3_2 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  0)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 3))
(define-fun main@%_20_0 () Int
  5)
(define-fun main@_bb10_0 () Bool
  true)
(define-fun main@%i.0.i3_0 () Int
  3)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  false)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  2)
(define-fun main@%_12_0 () Int
  (- 2))
(define-fun main@%_14_0 () Int
  3)
(define-fun main@%_22_0 () Int
  (- 3))
(define-fun main@%input.0.i5_1 () Int
  (- 3))
(define-fun main@%input.0.i5_2 () Int
  (- 3))
(define-fun main@%_4_0 () Int
  (- 2))
(-2,-4,3,1,) -> (-2,-3,4,0,)
ICE ICE 0
NEG CEX, INDEX IS 8
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%_4_0<=1)
  !(main@%i.0.i3_2<=0)
] <- ([&&
  true
  !(main@%_4_0<=1)
  !(main@%i.0.i3_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not (and true (not (<= main@%_4_0 1)) (not (<= main@%i.0.i3_2 0)))))
(assert (and true
     (not (<= main@%_4_0 1))
     (not (<= main@%i.0.i3_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

verify horn rule : (main@entry @unknown_0) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: true <- true
smt formula
(assert (not true))
(assert true)
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (verifier.error true true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!true))&&(!true)))||(((true&&(!true))&&true)&&true))||(((true&&true)&&(!true))&&true))||(((true&&true)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not true) (not true))
               (and (and true (not true)) true true)
               (and (and true true) (not true) true)
               (and (and true true) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error true false true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!false))&&(!true)))||(((true&&(!true))&&false)&&true))||(((true&&true)&&(!false))&&true))||(((true&&true)&&false)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not false) (not true))
               (and (and true (not true)) false true)
               (and (and true true) (not false) true)
               (and (and true true) false true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!true))&&(!true)))||(((true&&(!false))&&true)&&true))||(((true&&false)&&(!true))&&true))||(((true&&false)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not true) (not true))
               (and (and true (not false)) true true)
               (and (and true false) (not true) true)
               (and (and true false) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false false false) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!false))&&(!false)))||(((true&&(!false))&&false)&&false))||(((true&&false)&&(!false))&&false))||(((true&&false)&&false)&&false)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not false) (not false))
               (and (and true (not false)) false false)
               (and (and true false) (not false) false)
               (and (and true false) false false))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%_4_0<=1)
  !(main@%i.0.i3_1<=0)
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (not (and true (not (<= main@%_4_0 1)) (not (<= main@%i.0.i3_1 0)))))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(main@%_4_0<=1)
  !(main@%i.0.i3_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%_4_0 1))
     (not (<= main@%i.0.i3_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  0)
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%_22_0 () Int
  2)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  1)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  1)
(define-fun main@%_15_0 () Int
  3)
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%current.0.i.lcssa_1 () Int
  1)
(define-fun main@%_8_0 () Int
  1)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  1)
(define-fun main@%current.2.i.4_3 () Int
  3)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  1)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  1)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  1)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  1)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  1)
(define-fun main@%current.0.i.lcssa_0 () Int
  1)
(define-fun main@%_4_0 () Int
  2)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  38600)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  1)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  38601)
(2,1,38600,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 9
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(((1*main@%_4_0)+(-1*main@%i.0.i3_0))<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1)))
      (a!2 (not (<= (+ (* 1 main@%_4_0) (* (- 1) main@%i.0.i3_0)) 0))))
  (and true
       a!1
       a!2
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  0)
(define-fun main@%input.0.i5_0 () Int
  5)
(define-fun main@%_22_0 () Int
  6)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  5)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  5)
(define-fun main@%_15_0 () Int
  7)
(define-fun main@%current.2.i.4_4 () Int
  5)
(define-fun main@%current.0.i.lcssa_1 () Int
  5)
(define-fun main@%_8_0 () Int
  5)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  5)
(define-fun main@%current.2.i.4_3 () Int
  7)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  5)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  5)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  5)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  5)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  5)
(define-fun main@%current.0.i.lcssa_0 () Int
  5)
(define-fun main@%_4_0 () Int
  6)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  5)
(define-fun main@%_14_0 () Int
  1)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(6,5,0,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 10
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(main@%i.0.i3_0<=0)
  main@%i.0.i3_0<=1
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%i.0.i3_0 0))
     (<= main@%i.0.i3_0 1)
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  0)
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  0)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%_8_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  0)
(define-fun main@%current.0.i.lcssa_1 () Int
  0)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  0)
(define-fun main@%current.2.i.4_3 () Int
  (- 2))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  true)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  1)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  0)
(define-fun main@%current.0.i.lcssa_0 () Int
  0)
(define-fun main@%_4_0 () Int
  1)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  1)
(define-fun main@%Pivot_0 () Bool
  false)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  false)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  0)
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  2)
(1,0,1,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 11
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%i.0.i3_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       (not (<= main@%i.0.i3_0 0))
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  0)
(define-fun main@%input.0.i5_0 () Int
  2)
(define-fun main@%_22_0 () Int
  3)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  2)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  2)
(define-fun main@%_15_0 () Int
  4)
(define-fun main@%current.2.i.4_4 () Int
  2)
(define-fun main@%current.0.i.lcssa_1 () Int
  2)
(define-fun main@%_8_0 () Int
  2)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  2)
(define-fun main@%current.2.i.4_3 () Int
  4)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  2)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  2)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  2)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  2)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  2)
(define-fun main@%current.0.i.lcssa_0 () Int
  2)
(define-fun main@%_4_0 () Int
  3)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  6185)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  2)
(define-fun main@%_14_0 () Int
  1)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  6186)
(3,2,6185,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 12
C5 learn 
Rule Verification Round 5
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(main@%current.0.i4_0<=0)
  ((1*main@%_4_0)+(-1*main@%input.0.i5_0))<=1
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     (<= (+ (* 1 main@%_4_0) (* (- 1) main@%input.0.i5_0)) 1)
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_2 main@%i.0.i3_2 main@%current.0.i4_2) <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%current.0.i4_2<=0)
  ((1*main@%_4_0)+(-1*main@%input.0.i5_2))<=1
] <- ([&&
  true
  !(main@%current.0.i4_0<=0)
  ((1*main@%_4_0)+(-1*main@%input.0.i5_0))<=1
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (and true
                (not (<= main@%current.0.i4_2 0))
                (<= (+ (* 1 main@%_4_0) (* (- 1) main@%input.0.i5_2)) 1))))
  (not a!1)))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     (<= (+ (* 1 main@%_4_0) (* (- 1) main@%input.0.i5_0)) 1)
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%current.0.i4_1<=0)
  ((1*main@%_4_0)+(-1*main@%input.0.i5_1))<=1
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun @unknown_0 () Int)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (let ((a!1 (and true
                (not (<= main@%current.0.i4_1 0))
                (<= (+ (* 1 main@%_4_0) (* (- 1) main@%input.0.i5_1)) 1))))
  (not a!1)))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@%_4_0 () Int
  3)
(define-fun main@%input.0.i5_1 () Int
  1)
(define-fun main@%current.0.i4_1 () Int
  1)
(define-fun main@%_1_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%_2_0 () Int
  1)
(define-fun main@%_5_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@.lr.ph.preheader_0 () Bool
  true)
(define-fun main@entry_0 () Bool
  true)
(define-fun main@%_0_0 () Int
  0)
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%i.0.i3_0 () Int
  1)
(define-fun @unknown_0 () Int
  0)
(define-fun main@%_3_0 () Int
  0)
(0,) -> (3,1,1,1,)
find pos cex
SVM based Hyperlane Learning!
POS CEX, INDEX IS 13
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: true <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (not true))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  1)
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  0)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_1 () Int
  0)
(define-fun main@%_8_0 () Int
  0)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  0)
(define-fun main@%current.2.i.4_3 () Int
  0)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  0)
(define-fun main@%current.0.i.lcssa_0 () Int
  0)
(define-fun main@%_4_0 () Int
  1)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  (- 1))
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(1,0,0,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 15
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(main@%input.0.i5_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%input.0.i5_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@%_14_0 () Int
  (- 6))
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 2))
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%_22_0 () Int
  2)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  (- 1))
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 2))
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  (- 5))
(define-fun main@%current.2.i.4_4 () Int
  (- 3))
(define-fun main@%current.0.i.lcssa_1 () Int
  (- 1))
(define-fun main@%_8_0 () Int
  (- 1))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_3 () Int
  (- 5))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 1))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 1))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_0 () Int
  (- 1))
(define-fun main@%_4_0 () Int
  0)
(define-fun main@%_20_0 () Int
  (- 10))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 4))
(define-fun main@%_12_0 () Int
  (- 3))
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(0,1,0,-2,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 16
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(main@%i.0.i3_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%i.0.i3_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  (- 1))
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  (- 3))
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%current.0.i.lcssa_1 () Int
  (- 1))
(define-fun main@%_8_0 () Int
  (- 1))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_3 () Int
  (- 3))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 1))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 1))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_0 () Int
  (- 1))
(define-fun main@%_4_0 () Int
  0)
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  38600)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 2))
(define-fun main@%_12_0 () Int
  (- 2))
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  38601)
(0,0,38600,-1,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 17
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(((1*main@%_4_0)+(1*main@%input.0.i5_0))<=1)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%_4_0) (* 1 main@%input.0.i5_0)) 1))))
  (and true
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  1)
(define-fun main@%_22_0 () Int
  2)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  1)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  0)
(define-fun main@%_21_0 () Int
  2)
(define-fun main@%_15_0 () Int
  1)
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%current.0.i.lcssa_1 () Int
  1)
(define-fun main@%_8_0 () Int
  1)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  1)
(define-fun main@%current.2.i.4_3 () Int
  1)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  1)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  2)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  1)
(define-fun main@%current.0.i.lcssa_0 () Int
  1)
(define-fun main@%_4_0 () Int
  2)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  0)
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(2,1,0,0,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 18
C5 learn 
Rule Verification Round 5
TRYING TO ADD some CounterExample.
Verification condition: false <- ((true&&(!(main@%current.0.i4_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_2 main@%i.0.i3_2 main@%current.0.i4_2) <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: (true&&(!(main@%current.0.i4_2<=0))) <- ((true&&(!(main@%current.0.i4_0<=0)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not (and true (not (<= main@%current.0.i4_2 0)))))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%current.0.i4_1 () Int
  0)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  1)
(define-fun main@%input.0.i5_0 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%_8_0 () Int
  0)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  0)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  1)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%current.0.i4_2 () Int
  0)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  0)
(define-fun main@%_20_0 () Int
  1)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  false)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  2)
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  1)
(define-fun main@%_23_0 () Int
  1)
(define-fun main@%_22_0 () Int
  0)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%input.0.i5_1 () Int
  0)
(define-fun main@%i.0.i3_2 () Int
  1)
(define-fun main@%input.0.i5_2 () Int
  0)
(define-fun main@%_4_0 () Int
  1)
(1,-1,0,1,) -> (1,0,1,0,)
ICE ICE 0
NEG CEX, INDEX IS 19
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: (true&&(!(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1))) <- ((true&&(!(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1))))
  (not (and true a!1))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%current.0.i4_1 () Int
  2)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 2))
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  21)
(define-fun main@%input.0.i5_0 () Int
  (- 3))
(define-fun main@%_22_0 () Int
  (- 2))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  5)
(define-fun main@%current.2.i.4_4 () Int
  8)
(define-fun main@%_21_0 () Int
  2)
(define-fun main@%_15_0 () Int
  12)
(define-fun main@%_8_0 () Int
  2)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  12)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  2)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  2)
(define-fun main@%_18_0 () Int
  2)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  2)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%current.0.i4_2 () Int
  2)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  2)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  2)
(define-fun main@%_20_0 () Int
  0)
(define-fun main@%input.0.i5_1 () Int
  (- 2))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  11)
(define-fun main@%_12_0 () Int
  8)
(define-fun main@%_14_0 () Int
  15)
(define-fun main@%_23_0 () Int
  1)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%i.0.i3_2 () Int
  1)
(define-fun main@%_4_0 () Int
  (- 1))
(-1,-3,0,5,) -> (-1,-2,1,2,)
ICE ICE 0
NEG CEX, INDEX IS 20
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: (true&&(!([+
    1*main@%_4_0
    1*main@%input.0.i5_2
    1*main@%current.0.i4_2
  ]<=3))) <- ((true&&(!([+
    1*main@%_4_0
    1*main@%input.0.i5_0
    1*main@%current.0.i4_0
  ]<=3)))&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%_4_0)
                       (* 1 main@%input.0.i5_2)
                       (* 1 main@%current.0.i4_2))
                    3))))
  (not (and true a!1))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%_4_0)
                       (* 1 main@%input.0.i5_0)
                       (* 1 main@%current.0.i4_0))
                    3))))
  (and true
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%current.0.i4_1 () Int
  (- 5))
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 3))
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  (- 4))
(define-fun main@%_22_0 () Int
  (- 3))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  (- 5))
(define-fun main@%_15_0 () Int
  (- 7))
(define-fun main@%current.2.i.4_4 () Int
  (- 5))
(define-fun main@%_8_0 () Int
  (- 5))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  (- 7))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 5))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 5))
(define-fun main@%_18_0 () Int
  (- 5))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 5))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%current.0.i4_2 () Int
  (- 5))
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 5))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 5))
(define-fun main@%_4_0 () Int
  9)
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@%input.0.i5_1 () Int
  (- 3))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 1))
(define-fun main@%_12_0 () Int
  (- 5))
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_23_0 () Int
  1)
(define-fun main@%i.0.i3_1 () Int
  1)
(define-fun main@%i.0.i3_2 () Int
  1)
(9,-4,0,-1,) -> (9,-3,1,-5,)
ICE ICE 0
NEG CEX, INDEX IS 21
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%i.0.i3_2<=0)
  !(((1*main@%input.0.i5_2)+(-1*main@%i.0.i3_2))<=-38600)
] <- ([&&
  true
  !(main@%i.0.i3_0<=0)
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-38600)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%i.0.i3_2))
                    (- 38600)))))
  (not (and true (not (<= main@%i.0.i3_2 0)) a!1))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0))
                    (- 38600)))))
  (and true
       (not (<= main@%i.0.i3_0 0))
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

verify horn rule : (main@entry @unknown_0) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: true <- true
smt formula
(assert (not true))
(assert true)
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (verifier.error true true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!true))&&(!true)))||(((true&&(!true))&&true)&&true))||(((true&&true)&&(!true))&&true))||(((true&&true)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not true) (not true))
               (and (and true (not true)) true true)
               (and (and true true) (not true) true)
               (and (and true true) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error true false true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!false))&&(!true)))||(((true&&(!true))&&false)&&true))||(((true&&true)&&(!false))&&true))||(((true&&true)&&false)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not false) (not true))
               (and (and true (not true)) false true)
               (and (and true true) (not false) true)
               (and (and true true) false true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!true))&&(!true)))||(((true&&(!false))&&true)&&true))||(((true&&false)&&(!true))&&true))||(((true&&false)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not true) (not true))
               (and (and true (not false)) true true)
               (and (and true false) (not true) true)
               (and (and true false) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false false false) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!false))&&(!false)))||(((true&&(!false))&&false)&&false))||(((true&&false)&&(!false))&&false))||(((true&&false)&&false)&&false)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not false) (not false))
               (and (and true (not false)) false false)
               (and (and true false) (not false) false)
               (and (and true false) false false))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%i.0.i3_1<=0)
  !(((1*main@%input.0.i5_1)+(-1*main@%i.0.i3_1))<=-38600)
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_1) (* (- 1) main@%i.0.i3_1))
                    (- 38600)))))
  (not (and true (not (<= main@%i.0.i3_1 0)) a!1))))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(main@%i.0.i3_0<=0)
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-38600)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0))
                    (- 38600)))))
  (and true
       (not (<= main@%i.0.i3_0 0))
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  (- 1))
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%current.0.i.lcssa_1 () Int
  (- 1))
(define-fun main@%_8_0 () Int
  (- 1))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_3 () Int
  (- 1))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 1))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 1))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_0 () Int
  (- 1))
(define-fun main@%_4_0 () Int
  0)
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  29005)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 2))
(define-fun main@%_12_0 () Int
  (- 2))
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  29006)
(0,0,29005,-1,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 22
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-3)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1)))
      (a!2 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0)) (- 3)))))
  (and true
       a!1
       a!2
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  3)
(define-fun main@%_22_0 () Int
  4)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  2)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  2)
(define-fun main@%_15_0 () Int
  2)
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%current.0.i.lcssa_1 () Int
  2)
(define-fun main@%_8_0 () Int
  2)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  2)
(define-fun main@%current.2.i.4_3 () Int
  2)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  2)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  2)
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  2)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  2)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  2)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  2)
(define-fun main@%current.0.i.lcssa_0 () Int
  2)
(define-fun main@%_4_0 () Int
  3)
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  0)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 2))
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  1)
(3,3,0,-1,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 23
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(main@%i.0.i3_0<=0)
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-29005)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0))
                    (- 29005)))))
  (and true
       (not (<= main@%i.0.i3_0 0))
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@verifier.error.loopexit_0 () Bool
  true)
(define-fun main@verifier.error_0 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  (- 1))
(define-fun main@%input.0.i5_0 () Int
  0)
(define-fun main@%_22_0 () Int
  1)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_1 () Int
  (- 1))
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  (- 1))
(define-fun main@%_15_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%current.0.i.lcssa_1 () Int
  (- 1))
(define-fun main@%_8_0 () Int
  (- 1))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4.lcssa_0 () Int
  (- 1))
(define-fun main@%current.2.i.4_3 () Int
  (- 1))
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  (- 1))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@verifier.error.split_0 () Bool
  true)
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 1))
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%_9_0 () Bool
  true)
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  (- 1))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 1))
(define-fun main@%current.0.i.lcssa_0 () Int
  (- 1))
(define-fun main@%_4_0 () Int
  0)
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  19195)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 2))
(define-fun main@%_12_0 () Int
  (- 2))
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_24_0 () Bool
  false)
(define-fun main@%_23_0 () Int
  19196)
(0,0,19195,-1,) -> ()
ICE ICE 0
NEG CEX, INDEX IS 24
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(main@%current.0.i4_0<=0)
  !(main@%i.0.i3_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     (not (<= main@%i.0.i3_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@verifier.error.loopexit_0
         (and main@verifier.error.loopexit_0 main@.thread10_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (not main@%_24_0))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
     (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
         (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
     (=> main@verifier.error_0
         (and main@verifier.error_0 main@verifier.error.loopexit_0))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
     (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_2 main@%i.0.i3_2 main@%current.0.i4_2) <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%current.0.i4_2<=0)
  !(main@%i.0.i3_2<=0)
] <- ([&&
  true
  !(main@%current.0.i4_0<=0)
  !(main@%i.0.i3_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (not (and true (not (<= main@%current.0.i4_2 0)) (not (<= main@%i.0.i3_2 0)))))
(assert (and true
     (not (<= main@%current.0.i4_0 0))
     (not (<= main@%i.0.i3_0 0))
     true
     (= main@%_7_0 (rem main@%i.0.i3_0 5))
     (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
     (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
     (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
     (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
     (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
     (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
     (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
     (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
     (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
     (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
     (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
     (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
     (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
     (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
     (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
     (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
     (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
     (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
     (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
     (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
     (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
     (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
     (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
     (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
     (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
     (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
     (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
     (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
     (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
     (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
     (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
     (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
     (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
     (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
     (=> main@NewDefault_0
         (or (and main@LeafBlock1_0
                  |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
             (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
     (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf2_0))
     (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
         (not main@%SwitchLeaf_0))
     (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
     (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
     (=> main@.thread_0
         (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
     (=> main@.thread10_0
         (or (and main@.thread10_0 main@NewDefault_0)
             (and main@.thread10_0 main@_bb11_0)
             (and main@.thread10_0 main@_bb10_0)
             (and main@.thread10_0 main@_bb9_0)
             (and main@.thread10_0 main@_bb_0)
             (and main@.thread10_0 main@.thread_0)))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_0 main@%current.0.i4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_1 main@%_21_0))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_2 main@%_18_0))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_3 main@%_15_0))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_4 main@%_12_0))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_5 main@%_8_0))
     (=> (and main@.thread10_0 main@NewDefault_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_0))
     (=> (and main@.thread10_0 main@_bb11_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_1))
     (=> (and main@.thread10_0 main@_bb10_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_2))
     (=> (and main@.thread10_0 main@_bb9_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_3))
     (=> (and main@.thread10_0 main@_bb_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_4))
     (=> (and main@.thread10_0 main@.thread_0)
         (= main@%current.2.i.4_6 main@%current.2.i.4_5))
     (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
     (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
     (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
     (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
     main@.lr.ph_1
     (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_1 main@%_22_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_1 main@%current.2.i.4_6))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%input.0.i5_2 main@%input.0.i5_1))
     (=> (and main@.lr.ph_1 main@.thread10_0)
         (= main@%current.0.i4_2 main@%current.0.i4_1))
     (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_2 main@%i.0.i3_1))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  true)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  0)
(define-fun main@%_23_0 () Int
  4)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  4)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  4)
(define-fun main@%input.0.i5_0 () Int
  (- 4))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%_21_0 () Int
  0)
(define-fun main@%_15_0 () Int
  (- 2))
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%_8_0 () Int
  (- 3))
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  (- 2))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  0)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  0)
(define-fun main@%_18_0 () Int
  0)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  0)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  3)
(define-fun main@%current.0.i4_2 () Int
  0)
(define-fun main@%i.0.i3_2 () Int
  4)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  0)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 3))
(define-fun main@%_20_0 () Int
  5)
(define-fun main@_bb10_0 () Bool
  true)
(define-fun main@%i.0.i3_0 () Int
  3)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  false)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  2)
(define-fun main@%_12_0 () Int
  (- 2))
(define-fun main@%_14_0 () Int
  3)
(define-fun main@%_22_0 () Int
  (- 3))
(define-fun main@%input.0.i5_1 () Int
  (- 3))
(define-fun main@%input.0.i5_2 () Int
  (- 3))
(define-fun main@%_4_0 () Int
  (- 2))
(-2,-4,3,1,) -> (-2,-3,4,0,)
ICE ICE 0
NEG CEX, INDEX IS 25
C5 learn 
Rule Verification Round 2
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1)
  !(main@%i.0.i3_2<=0)
] <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%i.0.i3_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1))))
  (not (and true a!1 (not (<= main@%i.0.i3_2 0))))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       (not (<= main@%i.0.i3_0 0))
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  (- 5))
(define-fun main@%_23_0 () Int
  5)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  5)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  6)
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  (- 8))
(define-fun main@%input.0.i5_0 () Int
  5)
(define-fun main@%_22_0 () Int
  6)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  (- 2))
(define-fun main@%_21_0 () Int
  (- 5))
(define-fun main@%_15_0 () Int
  (- 5))
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%_8_0 () Int
  3)
(define-fun main@LeafBlock1_0 () Bool
  true)
(define-fun main@%current.2.i.4_3 () Int
  (- 5))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  (- 5))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 3))
(define-fun main@%_18_0 () Int
  (- 3))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 5))
(define-fun main@_bb11_0 () Bool
  true)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  (- 5))
(define-fun main@%i.0.i3_2 () Int
  5)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  (- 5))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  3)
(define-fun main@%_20_0 () Int
  (- 10))
(define-fun main@%input.0.i5_1 () Int
  6)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  4)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 4))
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  (- 10))
(define-fun main@%_4_0 () Int
  7)
(7,5,4,-2,) -> (7,6,5,-5,)
ICE ICE 0
NEG CEX, INDEX IS 26
C5 learn 
Rule Verification Round 3
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%current.0.i4_2<=0)
  !(((1*main@%input.0.i5_2)+(1*main@%i.0.i3_2))<=0)
] <- ([&&
  true
  !(main@%current.0.i4_0<=0)
  !(((1*main@%input.0.i5_0)+(1*main@%i.0.i3_0))<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%i.0.i3_2)) 0))))
  (not (and true (not (<= main@%current.0.i4_2 0)) a!1))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%i.0.i3_0)) 0))))
  (and true
       (not (<= main@%current.0.i4_0 0))
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  (- 4))
(define-fun main@%_23_0 () Int
  15)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  15)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 8))
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  5)
(define-fun main@%input.0.i5_0 () Int
  (- 9))
(define-fun main@%_22_0 () Int
  (- 8))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%_21_0 () Int
  (- 4))
(define-fun main@%_15_0 () Int
  (- 9))
(define-fun main@%current.2.i.4_4 () Int
  (- 7))
(define-fun main@%_8_0 () Int
  (- 8))
(define-fun main@LeafBlock1_0 () Bool
  true)
(define-fun main@%current.2.i.4_3 () Int
  (- 9))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  (- 4))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 4))
(define-fun main@%_18_0 () Int
  (- 4))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 4))
(define-fun main@_bb11_0 () Bool
  true)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  (- 4))
(define-fun main@%i.0.i3_2 () Int
  15)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  (- 4))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 8))
(define-fun main@%_20_0 () Int
  5)
(define-fun main@%input.0.i5_1 () Int
  (- 8))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  14)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  2)
(define-fun main@%_12_0 () Int
  (- 7))
(define-fun main@%_14_0 () Int
  0)
(define-fun main@%_4_0 () Int
  (- 7))
(-7,-9,14,1,) -> (-7,-8,15,-4,)
ICE ICE 0
NEG CEX, INDEX IS 27
C5 learn 
Rule Verification Round 4
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1)
  !(main@%i.0.i3_2<=0)
  ((1*main@%input.0.i5_2)+(-1*main@%i.0.i3_2))<=0
] <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%i.0.i3_0<=0)
  ((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=0
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1))))
(let ((a!2 (and true
                a!1
                (not (<= main@%i.0.i3_2 0))
                (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%i.0.i3_2)) 0))))
  (not a!2))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       (not (<= main@%i.0.i3_0 0))
       (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0)) 0)
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  (- 11))
(define-fun main@%_23_0 () Int
  10)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  10)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  10)
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  (- 20))
(define-fun main@%input.0.i5_0 () Int
  9)
(define-fun main@%_22_0 () Int
  10)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  (- 4))
(define-fun main@%_21_0 () Int
  (- 11))
(define-fun main@%_15_0 () Int
  (- 2))
(define-fun main@%current.2.i.4_4 () Int
  1)
(define-fun main@%_8_0 () Int
  5)
(define-fun main@LeafBlock1_0 () Bool
  true)
(define-fun main@%current.2.i.4_3 () Int
  (- 2))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  (- 11))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 11))
(define-fun main@%_18_0 () Int
  (- 11))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 11))
(define-fun main@_bb11_0 () Bool
  true)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  (- 11))
(define-fun main@%i.0.i3_2 () Int
  10)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  (- 11))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 11))
(define-fun main@%_20_0 () Int
  (- 20))
(define-fun main@%input.0.i5_1 () Int
  10)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  9)
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  false)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 8))
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  (- 12))
(define-fun main@%_4_0 () Int
  11)
(11,9,9,-4,) -> (11,10,10,-11,)
ICE ICE 0
NEG CEX, INDEX IS 28
C5 learn 
Rule Verification Round 5
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(main@%current.0.i4_2<=0)
  !(((1*main@%input.0.i5_2)+(-1*main@%i.0.i3_2))<=-1)
] <- ([&&
  true
  !(main@%current.0.i4_0<=0)
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-1)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%i.0.i3_2)) (- 1)))))
  (not (and true (not (<= main@%current.0.i4_2 0)) a!1))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0)) (- 1)))))
  (and true
       (not (<= main@%current.0.i4_0 0))
       a!1
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  (- 4))
(define-fun main@%_23_0 () Int
  (- 10))
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  (- 10))
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 8))
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  5)
(define-fun main@%input.0.i5_0 () Int
  (- 9))
(define-fun main@%_22_0 () Int
  (- 8))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  1)
(define-fun main@%_21_0 () Int
  (- 4))
(define-fun main@%_15_0 () Int
  (- 4))
(define-fun main@%current.2.i.4_4 () Int
  (- 7))
(define-fun main@%_8_0 () Int
  (- 8))
(define-fun main@LeafBlock1_0 () Bool
  true)
(define-fun main@%current.2.i.4_3 () Int
  (- 4))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  (- 4))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 4))
(define-fun main@%_18_0 () Int
  (- 4))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 4))
(define-fun main@_bb11_0 () Bool
  true)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  (- 4))
(define-fun main@%i.0.i3_2 () Int
  (- 10))
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  (- 4))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 8))
(define-fun main@%_20_0 () Int
  5)
(define-fun main@%input.0.i5_1 () Int
  (- 8))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  (- 11))
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  2)
(define-fun main@%_12_0 () Int
  (- 7))
(define-fun main@%_14_0 () Int
  5)
(define-fun main@%_4_0 () Int
  (- 7))
(-7,-9,-11,1,) -> (-7,-8,-10,-4,)
ICE ICE 0
NEG CEX, INDEX IS 29
C5 learn 
Rule Verification Round 6
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1)
  !(main@%current.0.i4_2<=0)
  !(((1*main@%input.0.i5_2)+(-1*main@%i.0.i3_2))<=-3)
] <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%current.0.i4_0<=0)
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-3)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1)))
      (a!2 (not (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%i.0.i3_2)) (- 3)))))
  (not (and true a!1 (not (<= main@%current.0.i4_2 0)) a!2))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1)))
      (a!2 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0)) (- 3)))))
  (and true
       a!1
       (not (<= main@%current.0.i4_0 0))
       a!2
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  true)
(define-fun main@%current.0.i4_1 () Int
  5)
(define-fun main@%_23_0 () Int
  (- 9))
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  (- 9))
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 5))
(define-fun main@LeafBlock_0 () Bool
  true)
(define-fun main@%_17_0 () Int
  44)
(define-fun main@%input.0.i5_0 () Int
  (- 6))
(define-fun main@%_22_0 () Int
  (- 5))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  true)
(define-fun main@%current.0.i4_0 () Int
  11)
(define-fun main@%_21_0 () Int
  49)
(define-fun main@%_15_0 () Int
  5)
(define-fun main@%current.2.i.4_4 () Int
  5)
(define-fun main@%_8_0 () Int
  5)
(define-fun main@LeafBlock1_0 () Bool
  false)
(define-fun main@%current.2.i.4_3 () Int
  5)
(define-fun main@%Pivot8_0 () Bool
  true)
(define-fun main@%current.2.i.4_6 () Int
  5)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  5)
(define-fun main@%_18_0 () Int
  38)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  5)
(define-fun main@_bb11_0 () Bool
  false)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  0)
(define-fun main@%current.0.i4_2 () Int
  5)
(define-fun main@%i.0.i3_2 () Int
  (- 9))
(define-fun main@NodeBlock5_0 () Bool
  false)
(define-fun main@%current.2.i.4_1 () Int
  49)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  5)
(define-fun main@%_20_0 () Int
  55)
(define-fun main@%input.0.i5_1 () Int
  (- 5))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  (- 10))
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  false)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  22)
(define-fun main@%_12_0 () Int
  16)
(define-fun main@%_14_0 () Int
  33)
(define-fun main@%_4_0 () Int
  (- 4))
(-4,-6,-10,11,) -> (-4,-5,-9,5,)
ICE ICE 0
NEG CEX, INDEX IS 30
C5 learn 
Rule Verification Round 7
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !([+
      1*main@%_4_0
      1*main@%input.0.i5_2
      1*main@%current.0.i4_2
    ]<=3)
  !(main@%current.0.i4_2<=0)
] <- ([&&
  true
  !([+
      1*main@%_4_0
      1*main@%input.0.i5_0
      1*main@%current.0.i4_0
    ]<=3)
  !(main@%current.0.i4_0<=0)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%_4_0)
                       (* 1 main@%input.0.i5_2)
                       (* 1 main@%current.0.i4_2))
                    3))))
  (not (and true a!1 (not (<= main@%current.0.i4_2 0))))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%_4_0)
                       (* 1 main@%input.0.i5_0)
                       (* 1 main@%current.0.i4_0))
                    3))))
  (and true
       a!1
       (not (<= main@%current.0.i4_0 0))
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  1)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  (- 13))
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  12)
(define-fun main@%input.0.i5_0 () Int
  (- 14))
(define-fun main@%_22_0 () Int
  (- 13))
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  3)
(define-fun main@%_21_0 () Int
  1)
(define-fun main@%_15_0 () Int
  (- 5))
(define-fun main@%current.2.i.4_4 () Int
  (- 8))
(define-fun main@%_8_0 () Int
  (- 11))
(define-fun main@LeafBlock1_0 () Bool
  true)
(define-fun main@%current.2.i.4_3 () Int
  (- 5))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  1)
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  1)
(define-fun main@%_18_0 () Int
  1)
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  1)
(define-fun main@_bb11_0 () Bool
  true)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  1)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  1)
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  1)
(define-fun main@%_4_0 () Int
  15)
(define-fun main@%_20_0 () Int
  15)
(define-fun main@%input.0.i5_1 () Int
  (- 13))
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  (- 1))
(define-fun main@%Pivot_0 () Bool
  true)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  false)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  6)
(define-fun main@%_12_0 () Int
  (- 8))
(define-fun main@%_14_0 () Int
  9)
(define-fun main@%_23_0 () Int
  0)
(define-fun main@%i.0.i3_1 () Int
  0)
(define-fun main@%i.0.i3_2 () Int
  0)
(15,-14,-1,3,) -> (15,-13,0,1,)
ICE ICE 0
NEG CEX, INDEX IS 31
C5 learn 
Rule Verification Round 8
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1)
  ((1*main@%input.0.i5_2)+(-1*main@%i.0.i3_2))<=0
  !(((1*main@%input.0.i5_2)+(-1*main@%i.0.i3_2))<=-3)
  ((1*main@%input.0.i5_2)+(-1*main@%current.0.i4_2))<=4
] <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  ((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=0
  !(((1*main@%input.0.i5_0)+(-1*main@%i.0.i3_0))<=-3)
  ((1*main@%input.0.i5_0)+(-1*main@%current.0.i4_0))<=4
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1)))
      (a!2 (not (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%i.0.i3_2)) (- 3)))))
(let ((a!3 (and true
                a!1
                (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%i.0.i3_2)) 0)
                a!2
                (<= (+ (* 1 main@%input.0.i5_2) (* (- 1) main@%current.0.i4_2))
                    4))))
  (not a!3))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1)))
      (a!2 (not (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0)) (- 3)))))
  (and true
       a!1
       (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%i.0.i3_0)) 0)
       a!2
       (<= (+ (* 1 main@%input.0.i5_0) (* (- 1) main@%current.0.i4_0)) 4)
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

SAT, NEED TO ADD The Counterexample
z3 model (define-fun main@NewDefault_0 () Bool
  false)
(define-fun main@%Pivot4_0 () Bool
  false)
(define-fun main@.thread_0 () Bool
  false)
(define-fun main@%current.0.i4_1 () Int
  (- 2))
(define-fun main@%_23_0 () Int
  5)
(define-fun main@.thread10_0 () Bool
  true)
(define-fun main@%i.0.i3_1 () Int
  5)
(define-fun main@.lr.ph_1 () Bool
  true)
(define-fun main@%input.0.i5_2 () Int
  4)
(define-fun main@LeafBlock_0 () Bool
  false)
(define-fun main@%_17_0 () Int
  (- 3))
(define-fun main@%input.0.i5_0 () Int
  3)
(define-fun main@%_22_0 () Int
  4)
(define-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@NodeBlock7_0 () Bool
  true)
(define-fun main@%Pivot6_0 () Bool
  false)
(define-fun main@NodeBlock_0 () Bool
  false)
(define-fun main@%current.0.i4_0 () Int
  (- 1))
(define-fun main@%_21_0 () Int
  (- 2))
(define-fun main@%_15_0 () Int
  0)
(define-fun main@%current.2.i.4_4 () Int
  (- 2))
(define-fun main@%_8_0 () Int
  (- 2))
(define-fun main@LeafBlock1_0 () Bool
  true)
(define-fun main@%current.2.i.4_3 () Int
  (- 2))
(define-fun main@%Pivot8_0 () Bool
  false)
(define-fun main@%current.2.i.4_6 () Int
  (- 2))
(define-fun main@_bb_0 () Bool
  false)
(define-fun main@%current.2.i.4_2 () Int
  (- 1))
(define-fun main@%_18_0 () Int
  (- 1))
(define-fun main@.lr.ph_0 () Bool
  true)
(define-fun main@%current.2.i.4_0 () Int
  (- 2))
(define-fun main@_bb11_0 () Bool
  true)
(define-fun main@_bb9_0 () Bool
  false)
(define-fun main@%_7_0 () Int
  4)
(define-fun main@%current.0.i4_2 () Int
  (- 2))
(define-fun main@%i.0.i3_2 () Int
  5)
(define-fun main@NodeBlock5_0 () Bool
  true)
(define-fun main@%current.2.i.4_1 () Int
  (- 2))
(define-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool
  false)
(define-fun main@%current.2.i.4_5 () Int
  (- 2))
(define-fun main@%_20_0 () Int
  (- 5))
(define-fun main@%input.0.i5_1 () Int
  4)
(define-fun main@_bb10_0 () Bool
  false)
(define-fun main@%i.0.i3_0 () Int
  4)
(define-fun main@%Pivot_0 () Bool
  false)
(define-fun main@%SwitchLeaf2_0 () Bool
  true)
(define-fun main@NodeBlock3_0 () Bool
  true)
(define-fun main@%SwitchLeaf_0 () Bool
  true)
(define-fun main@%_24_0 () Bool
  true)
(define-fun main@%_11_0 () Int
  (- 2))
(define-fun main@%_12_0 () Int
  1)
(define-fun main@%_14_0 () Int
  (- 3))
(define-fun main@%_4_0 () Int
  5)
(5,3,4,-1,) -> (5,4,5,-2,)
ICE ICE 0
NEG CEX, INDEX IS 32
C5 learn 
Rule Verification Round 9
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1)
  !(main@%current.0.i4_2<=0)
  !(main@%input.0.i5_2<=-1)
] <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%current.0.i4_0<=0)
  !(main@%input.0.i5_0<=-1)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1))))
  (not (and true
            a!1
            (not (<= main@%current.0.i4_2 0))
            (not (<= main@%input.0.i5_2 (- 1)))))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       (not (<= main@%current.0.i4_0 0))
       (not (<= main@%input.0.i5_0 (- 1)))
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_1)+(1*main@%current.0.i4_1))<=1)
  !(main@%current.0.i4_1<=0)
  !(main@%input.0.i5_1<=-1)
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_3_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_1) (* 1 main@%current.0.i4_1)) 1))))
  (not (and true
            a!1
            (not (<= main@%current.0.i4_1 0))
            (not (<= main@%input.0.i5_1 (- 1)))))))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : (main@entry @unknown_0) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: true <- true
smt formula
(assert (not true))
(assert true)
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_1)+(1*main@%current.0.i4_1))<=1)
  !(main@%current.0.i4_1<=0)
  !(main@%input.0.i5_1<=-1)
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_3_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_1) (* 1 main@%current.0.i4_1)) 1))))
  (not (and true
            a!1
            (not (<= main@%current.0.i4_1 0))
            (not (<= main@%input.0.i5_1 (- 1)))))))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : (verifier.error true true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!true))&&(!true)))||(((true&&(!true))&&true)&&true))||(((true&&true)&&(!true))&&true))||(((true&&true)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not true) (not true))
               (and (and true (not true)) true true)
               (and (and true true) (not true) true)
               (and (and true true) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error true false true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!false))&&(!true)))||(((true&&(!true))&&false)&&true))||(((true&&true)&&(!false))&&true))||(((true&&true)&&false)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not false) (not true))
               (and (and true (not true)) false true)
               (and (and true true) (not false) true)
               (and (and true true) false true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!true))&&(!true)))||(((true&&(!false))&&true)&&true))||(((true&&false)&&(!true))&&true))||(((true&&false)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not true) (not true))
               (and (and true (not false)) true true)
               (and (and true false) (not true) true)
               (and (and true false) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false false false) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!false))&&(!false)))||(((true&&(!false))&&false)&&false))||(((true&&false)&&(!false))&&false))||(((true&&false)&&false)&&false)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not false) (not false))
               (and (and true (not false)) false false)
               (and (and true false) (not false) false)
               (and (and true false) false false))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%current.0.i4_0<=0)
  !(main@%input.0.i5_0<=-1)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@verifier.error.loopexit_0->(main@verifier.error.loopexit_0&&main@.thread10_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(!main@%_24_0)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_0=main@%current.2.i.4_6)
  (main@verifier.error.loopexit_0&&main@.thread10_0)->(main@%current.2.i.4.lcssa_1=main@%current.2.i.4.lcssa_0)
  main@verifier.error_0->(main@verifier.error_0&&main@verifier.error.loopexit_0)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_0=main@%current.2.i.4.lcssa_1)
  (main@verifier.error_0&&main@verifier.error.loopexit_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%current.2.i.4.lcssa_1 () Int)
(declare-fun main@%current.2.i.4.lcssa_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@verifier.error.loopexit_0 () Bool)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@%_15_0 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)
(declare-fun main@%_4_0 () Int)

(assert (not false))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       (not (<= main@%current.0.i4_0 0))
       (not (<= main@%input.0.i5_0 (- 1)))
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@verifier.error.loopexit_0
           (and main@verifier.error.loopexit_0 main@.thread10_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (not main@%_24_0))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_0 main@%current.2.i.4_6))
       (=> (and main@verifier.error.loopexit_0 main@.thread10_0)
           (= main@%current.2.i.4.lcssa_1 main@%current.2.i.4.lcssa_0))
       (=> main@verifier.error_0
           (and main@verifier.error_0 main@verifier.error.loopexit_0))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_0 main@%current.2.i.4.lcssa_1))
       (=> (and main@verifier.error_0 main@verifier.error.loopexit_0)
           (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
       (=> main@verifier.error_0
           (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
       (=> main@verifier.error_0 main@%_9_0)
       (=> main@verifier.error.split_0
           (and main@verifier.error.split_0 main@verifier.error_0))
       main@verifier.error.split_0)))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_2 main@%i.0.i3_2 main@%current.0.i4_2) <- ((main@.lr.ph main@%_4_0 main@%input.0.i5_0 main@%i.0.i3_0 main@%current.0.i4_0)&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_2)+(1*main@%current.0.i4_2))<=1)
  !(main@%current.0.i4_2<=0)
  !(main@%input.0.i5_2<=-1)
] <- ([&&
  true
  !(((1*main@%input.0.i5_0)+(1*main@%current.0.i4_0))<=1)
  !(main@%current.0.i4_0<=0)
  !(main@%input.0.i5_0<=-1)
]&&[&&
  true
  main@%_7_0=(main@%i.0.i3_0%5)
  main@NodeBlock7_0->(main@NodeBlock7_0&&main@.lr.ph_0)
  main@NodeBlock7_0->(main@%Pivot8_0=(main@%_7_0<2))
  main@NodeBlock5_0->(main@NodeBlock5_0&&main@NodeBlock7_0)
  (main@NodeBlock5_0&&main@NodeBlock7_0)->(!main@%Pivot8_0)
  main@NodeBlock5_0->(main@%Pivot6_0=(main@%_7_0<3))
  main@NodeBlock3_0->(main@NodeBlock3_0&&main@NodeBlock5_0)
  (main@NodeBlock3_0&&main@NodeBlock5_0)->(!main@%Pivot6_0)
  main@NodeBlock3_0->(main@%Pivot4_0=(main@%_7_0<4))
  main@LeafBlock1_0->(main@LeafBlock1_0&&main@NodeBlock3_0)
  (main@LeafBlock1_0&&main@NodeBlock3_0)->(!main@%Pivot4_0)
  main@LeafBlock1_0->(main@%SwitchLeaf2_0=(main@%_7_0=4))
  main@_bb11_0->(main@_bb11_0&&main@LeafBlock1_0)
  (main@_bb11_0&&main@LeafBlock1_0)->main@%SwitchLeaf2_0
  main@_bb11_0->(main@%_20_0=(main@%current.0.i4_0*5))
  main@_bb11_0->(main@%_21_0=(main@%_20_0+main@%input.0.i5_0))
  main@_bb10_0->(main@_bb10_0&&main@NodeBlock3_0)
  (main@_bb10_0&&main@NodeBlock3_0)->main@%Pivot4_0
  main@_bb10_0->(main@%_17_0=(main@%current.0.i4_0*4))
  main@_bb10_0->(main@%_18_0=(main@%_17_0+main@%input.0.i5_0))
  main@_bb9_0->(main@_bb9_0&&main@NodeBlock5_0)
  (main@_bb9_0&&main@NodeBlock5_0)->main@%Pivot6_0
  main@_bb9_0->(main@%_14_0=(main@%current.0.i4_0*3))
  main@_bb9_0->(main@%_15_0=(main@%_14_0+main@%input.0.i5_0))
  main@NodeBlock_0->(main@NodeBlock_0&&main@NodeBlock7_0)
  (main@NodeBlock_0&&main@NodeBlock7_0)->main@%Pivot8_0
  main@NodeBlock_0->(main@%Pivot_0=(main@%_7_0<1))
  main@_bb_0->(main@_bb_0&&main@NodeBlock_0)
  (main@_bb_0&&main@NodeBlock_0)->(!main@%Pivot_0)
  main@_bb_0->(main@%_11_0=(main@%current.0.i4_0*2))
  main@_bb_0->(main@%_12_0=(main@%_11_0+main@%input.0.i5_0))
  main@LeafBlock_0->(main@LeafBlock_0&&main@NodeBlock_0)
  (main@LeafBlock_0&&main@NodeBlock_0)->main@%Pivot_0
  main@LeafBlock_0->(main@%SwitchLeaf_0=(main@%_7_0=0))
  tuple(main@LeafBlock1_0, main@NewDefault_0)->main@LeafBlock1_0
  tuple(main@LeafBlock_0, main@NewDefault_0)->main@LeafBlock_0
  main@NewDefault_0->((main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))||(main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0)))
  (main@LeafBlock1_0&&tuple(main@LeafBlock1_0, main@NewDefault_0))->(!main@%SwitchLeaf2_0)
  (main@LeafBlock_0&&tuple(main@LeafBlock_0, main@NewDefault_0))->(!main@%SwitchLeaf_0)
  main@.thread_0->(main@.thread_0&&main@LeafBlock_0)
  (main@.thread_0&&main@LeafBlock_0)->main@%SwitchLeaf_0
  main@.thread_0->(main@%_8_0=(main@%current.0.i4_0+main@%input.0.i5_0))
  main@.thread10_0->[||
    main@.thread10_0&&main@NewDefault_0
    main@.thread10_0&&main@_bb11_0
    main@.thread10_0&&main@_bb10_0
    main@.thread10_0&&main@_bb9_0
    main@.thread10_0&&main@_bb_0
    main@.thread10_0&&main@.thread_0
  ]
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_0=main@%current.0.i4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_1=main@%_21_0)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_2=main@%_18_0)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_3=main@%_15_0)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_4=main@%_12_0)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_5=main@%_8_0)
  (main@.thread10_0&&main@NewDefault_0)->(main@%current.2.i.4_6=main@%current.2.i.4_0)
  (main@.thread10_0&&main@_bb11_0)->(main@%current.2.i.4_6=main@%current.2.i.4_1)
  (main@.thread10_0&&main@_bb10_0)->(main@%current.2.i.4_6=main@%current.2.i.4_2)
  (main@.thread10_0&&main@_bb9_0)->(main@%current.2.i.4_6=main@%current.2.i.4_3)
  (main@.thread10_0&&main@_bb_0)->(main@%current.2.i.4_6=main@%current.2.i.4_4)
  (main@.thread10_0&&main@.thread_0)->(main@%current.2.i.4_6=main@%current.2.i.4_5)
  main@.thread10_0->(main@%_22_0=(main@%input.0.i5_0+1))
  main@.thread10_0->(main@%_23_0=(main@%i.0.i3_0+1))
  main@.thread10_0->(main@%_24_0=(main@%_22_0<main@%_4_0))
  main@.lr.ph_1->(main@.lr.ph_1&&main@.thread10_0)
  main@.lr.ph_1
  (main@.lr.ph_1&&main@.thread10_0)->main@%_24_0
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_1=main@%_22_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_1=main@%current.2.i.4_6)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_1=main@%_23_0)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%input.0.i5_2=main@%input.0.i5_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%current.0.i4_2=main@%current.0.i4_1)
  (main@.lr.ph_1&&main@.thread10_0)->(main@%i.0.i3_2=main@%i.0.i3_1)
])
smt formulas 
(declare-fun main@%i.0.i3_2 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@.lr.ph_1 () Bool)
(declare-fun main@%_4_0 () Int)
(declare-fun main@%_18_0 () Int)
(declare-fun main@%_21_0 () Int)
(declare-fun main@%_20_0 () Int)
(declare-fun main@_bb11_0 () Bool)
(declare-fun main@%SwitchLeaf2_0 () Bool)
(declare-fun main@%Pivot4_0 () Bool)
(declare-fun main@%input.0.i5_2 () Int)
(declare-fun main@NodeBlock3_0 () Bool)
(declare-fun main@_bb10_0 () Bool)
(declare-fun main@%_7_0 () Int)
(declare-fun main@%current.2.i.4_2 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%Pivot6_0 () Bool)
(declare-fun main@LeafBlock1_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%Pivot8_0 () Bool)
(declare-fun main@%_22_0 () Int)
(declare-fun main@%_17_0 () Int)
(declare-fun main@%current.0.i4_2 () Int)
(declare-fun main@%current.2.i.4_1 () Int)
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.2.i.4_3 () Int)
(declare-fun main@_bb9_0 () Bool)
(declare-fun main@NodeBlock7_0 () Bool)
(declare-fun main@%current.2.i.4_5 () Int)
(declare-fun main@%_14_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%current.2.i.4_6 () Int)
(declare-fun main@NodeBlock5_0 () Bool)
(declare-fun main@%_24_0 () Bool)
(declare-fun main@%_15_0 () Int)
(declare-fun main@NodeBlock_0 () Bool)
(declare-fun main@%Pivot_0 () Bool)
(declare-fun main@_bb_0 () Bool)
(declare-fun main@%_11_0 () Int)
(declare-fun main@%_12_0 () Int)
(declare-fun main@LeafBlock_0 () Bool)
(declare-fun main@%SwitchLeaf_0 () Bool)
(declare-fun |tuple(main@LeafBlock1_0, main@NewDefault_0)| () Bool)
(declare-fun |tuple(main@LeafBlock_0, main@NewDefault_0)| () Bool)
(declare-fun main@NewDefault_0 () Bool)
(declare-fun main@.thread_0 () Bool)
(declare-fun main@%_8_0 () Int)
(declare-fun main@.thread10_0 () Bool)
(declare-fun main@%current.2.i.4_0 () Int)
(declare-fun main@%current.2.i.4_4 () Int)
(declare-fun main@%_23_0 () Int)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_2) (* 1 main@%current.0.i4_2)) 1))))
  (not (and true
            a!1
            (not (<= main@%current.0.i4_2 0))
            (not (<= main@%input.0.i5_2 (- 1)))))))
(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_0) (* 1 main@%current.0.i4_0)) 1))))
  (and true
       a!1
       (not (<= main@%current.0.i4_0 0))
       (not (<= main@%input.0.i5_0 (- 1)))
       true
       (= main@%_7_0 (rem main@%i.0.i3_0 5))
       (=> main@NodeBlock7_0 (and main@NodeBlock7_0 main@.lr.ph_0))
       (=> main@NodeBlock7_0 (= main@%Pivot8_0 (< main@%_7_0 2)))
       (=> main@NodeBlock5_0 (and main@NodeBlock5_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock5_0 main@NodeBlock7_0) (not main@%Pivot8_0))
       (=> main@NodeBlock5_0 (= main@%Pivot6_0 (< main@%_7_0 3)))
       (=> main@NodeBlock3_0 (and main@NodeBlock3_0 main@NodeBlock5_0))
       (=> (and main@NodeBlock3_0 main@NodeBlock5_0) (not main@%Pivot6_0))
       (=> main@NodeBlock3_0 (= main@%Pivot4_0 (< main@%_7_0 4)))
       (=> main@LeafBlock1_0 (and main@LeafBlock1_0 main@NodeBlock3_0))
       (=> (and main@LeafBlock1_0 main@NodeBlock3_0) (not main@%Pivot4_0))
       (=> main@LeafBlock1_0 (= main@%SwitchLeaf2_0 (= main@%_7_0 4)))
       (=> main@_bb11_0 (and main@_bb11_0 main@LeafBlock1_0))
       (=> (and main@_bb11_0 main@LeafBlock1_0) main@%SwitchLeaf2_0)
       (=> main@_bb11_0 (= main@%_20_0 (* main@%current.0.i4_0 5)))
       (=> main@_bb11_0 (= main@%_21_0 (+ main@%_20_0 main@%input.0.i5_0)))
       (=> main@_bb10_0 (and main@_bb10_0 main@NodeBlock3_0))
       (=> (and main@_bb10_0 main@NodeBlock3_0) main@%Pivot4_0)
       (=> main@_bb10_0 (= main@%_17_0 (* main@%current.0.i4_0 4)))
       (=> main@_bb10_0 (= main@%_18_0 (+ main@%_17_0 main@%input.0.i5_0)))
       (=> main@_bb9_0 (and main@_bb9_0 main@NodeBlock5_0))
       (=> (and main@_bb9_0 main@NodeBlock5_0) main@%Pivot6_0)
       (=> main@_bb9_0 (= main@%_14_0 (* main@%current.0.i4_0 3)))
       (=> main@_bb9_0 (= main@%_15_0 (+ main@%_14_0 main@%input.0.i5_0)))
       (=> main@NodeBlock_0 (and main@NodeBlock_0 main@NodeBlock7_0))
       (=> (and main@NodeBlock_0 main@NodeBlock7_0) main@%Pivot8_0)
       (=> main@NodeBlock_0 (= main@%Pivot_0 (< main@%_7_0 1)))
       (=> main@_bb_0 (and main@_bb_0 main@NodeBlock_0))
       (=> (and main@_bb_0 main@NodeBlock_0) (not main@%Pivot_0))
       (=> main@_bb_0 (= main@%_11_0 (* main@%current.0.i4_0 2)))
       (=> main@_bb_0 (= main@%_12_0 (+ main@%_11_0 main@%input.0.i5_0)))
       (=> main@LeafBlock_0 (and main@LeafBlock_0 main@NodeBlock_0))
       (=> (and main@LeafBlock_0 main@NodeBlock_0) main@%Pivot_0)
       (=> main@LeafBlock_0 (= main@%SwitchLeaf_0 (= main@%_7_0 0)))
       (=> |tuple(main@LeafBlock1_0, main@NewDefault_0)| main@LeafBlock1_0)
       (=> |tuple(main@LeafBlock_0, main@NewDefault_0)| main@LeafBlock_0)
       (=> main@NewDefault_0
           (or (and main@LeafBlock1_0
                    |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
               (and main@LeafBlock_0
                    |tuple(main@LeafBlock_0, main@NewDefault_0)|)))
       (=> (and main@LeafBlock1_0 |tuple(main@LeafBlock1_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf2_0))
       (=> (and main@LeafBlock_0 |tuple(main@LeafBlock_0, main@NewDefault_0)|)
           (not main@%SwitchLeaf_0))
       (=> main@.thread_0 (and main@.thread_0 main@LeafBlock_0))
       (=> (and main@.thread_0 main@LeafBlock_0) main@%SwitchLeaf_0)
       (=> main@.thread_0
           (= main@%_8_0 (+ main@%current.0.i4_0 main@%input.0.i5_0)))
       (=> main@.thread10_0
           (or (and main@.thread10_0 main@NewDefault_0)
               (and main@.thread10_0 main@_bb11_0)
               (and main@.thread10_0 main@_bb10_0)
               (and main@.thread10_0 main@_bb9_0)
               (and main@.thread10_0 main@_bb_0)
               (and main@.thread10_0 main@.thread_0)))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_0 main@%current.0.i4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_1 main@%_21_0))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_2 main@%_18_0))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_3 main@%_15_0))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_4 main@%_12_0))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_5 main@%_8_0))
       (=> (and main@.thread10_0 main@NewDefault_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_0))
       (=> (and main@.thread10_0 main@_bb11_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_1))
       (=> (and main@.thread10_0 main@_bb10_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_2))
       (=> (and main@.thread10_0 main@_bb9_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_3))
       (=> (and main@.thread10_0 main@_bb_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_4))
       (=> (and main@.thread10_0 main@.thread_0)
           (= main@%current.2.i.4_6 main@%current.2.i.4_5))
       (=> main@.thread10_0 (= main@%_22_0 (+ main@%input.0.i5_0 1)))
       (=> main@.thread10_0 (= main@%_23_0 (+ main@%i.0.i3_0 1)))
       (=> main@.thread10_0 (= main@%_24_0 (< main@%_22_0 main@%_4_0)))
       (=> main@.lr.ph_1 (and main@.lr.ph_1 main@.thread10_0))
       main@.lr.ph_1
       (=> (and main@.lr.ph_1 main@.thread10_0) main@%_24_0)
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_1 main@%_22_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_1 main@%current.2.i.4_6))
       (=> (and main@.lr.ph_1 main@.thread10_0) (= main@%i.0.i3_1 main@%_23_0))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%input.0.i5_2 main@%input.0.i5_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%current.0.i4_2 main@%current.0.i4_1))
       (=> (and main@.lr.ph_1 main@.thread10_0)
           (= main@%i.0.i3_2 main@%i.0.i3_1)))))
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_1)+(1*main@%current.0.i4_1))<=1)
  !(main@%current.0.i4_1<=0)
  !(main@%input.0.i5_1<=-1)
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_3_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_1) (* 1 main@%current.0.i4_1)) 1))))
  (not (and true
            a!1
            (not (<= main@%current.0.i4_1 0))
            (not (<= main@%input.0.i5_1 (- 1)))))))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : (main@entry @unknown_0) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: true <- true
smt formula
(assert (not true))
(assert true)
(check-sat)

verify horn rule : main@verifier.error.split <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: false <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@verifier.error_0->(main@verifier.error_0&&main@entry_0)
  (main@verifier.error_0&&main@entry_0)->(!main@%_5_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_0=main@%_2_0)
  (main@verifier.error_0&&main@entry_0)->(main@%current.0.i.lcssa_1=main@%current.0.i.lcssa_0)
  main@verifier.error_0->(main@%_9_0=(main@%current.0.i.lcssa_1<main@%_4_0))
  main@verifier.error_0->main@%_9_0
  main@verifier.error.split_0->(main@verifier.error.split_0&&main@verifier.error_0)
  main@verifier.error.split_0
])
smt formulas 
(declare-fun main@verifier.error.split_0 () Bool)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%_9_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%current.0.i.lcssa_1 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@verifier.error_0 () Bool)
(declare-fun main@%_3_0 () Int)
(declare-fun main@%current.0.i.lcssa_0 () Int)

(assert (not false))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@verifier.error_0 (and main@verifier.error_0 main@entry_0))
     (=> (and main@verifier.error_0 main@entry_0) (not main@%_5_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_0 main@%_2_0))
     (=> (and main@verifier.error_0 main@entry_0)
         (= main@%current.0.i.lcssa_1 main@%current.0.i.lcssa_0))
     (=> main@verifier.error_0
         (= main@%_9_0 (< main@%current.0.i.lcssa_1 main@%_4_0)))
     (=> main@verifier.error_0 main@%_9_0)
     (=> main@verifier.error.split_0
         (and main@verifier.error.split_0 main@verifier.error_0))
     main@verifier.error.split_0))
(check-sat)

verify horn rule : (main@.lr.ph main@%_4_0 main@%input.0.i5_1 main@%i.0.i3_1 main@%current.0.i4_1) <- ((main@entry @unknown_0)&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
Rule Verification Round 1
TRYING TO ADD some CounterExample.
Verification condition: [&&
  true
  !(((1*main@%input.0.i5_1)+(1*main@%current.0.i4_1))<=1)
  !(main@%current.0.i4_1<=0)
  !(main@%input.0.i5_1<=-1)
] <- (true&&[&&
  true
  main@%_1_0=(main@%_0_0%10)
  main@%_2_0=(main@%_1_0+1)
  main@%_3_0=@unknown_0
  main@%_5_0=(main@%_2_0<main@%_4_0)
  main@.lr.ph.preheader_0->(main@.lr.ph.preheader_0&&main@entry_0)
  (main@.lr.ph.preheader_0&&main@entry_0)->main@%_5_0
  main@.lr.ph_0->(main@.lr.ph_0&&main@.lr.ph.preheader_0)
  main@.lr.ph_0
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_0=main@%_2_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_0=1)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%input.0.i5_1=main@%input.0.i5_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%current.0.i4_1=main@%current.0.i4_0)
  (main@.lr.ph_0&&main@.lr.ph.preheader_0)->(main@%i.0.i3_1=main@%i.0.i3_0)
])
smt formulas 
(declare-fun main@%i.0.i3_0 () Int)
(declare-fun main@%current.0.i4_0 () Int)
(declare-fun main@%input.0.i5_0 () Int)
(declare-fun main@.lr.ph_0 () Bool)
(declare-fun main@%_0_0 () Int)
(declare-fun main@%input.0.i5_1 () Int)
(declare-fun main@%i.0.i3_1 () Int)
(declare-fun main@%_2_0 () Int)
(declare-fun main@%_5_0 () Bool)
(declare-fun main@%current.0.i4_1 () Int)
(declare-fun main@%_3_0 () Int)
(declare-fun @unknown_0 () Int)
(declare-fun main@%_1_0 () Int)
(declare-fun main@%_4_0 () Int)
(declare-fun main@entry_0 () Bool)
(declare-fun main@.lr.ph.preheader_0 () Bool)

(assert (let ((a!1 (not (<= (+ (* 1 main@%input.0.i5_1) (* 1 main@%current.0.i4_1)) 1))))
  (not (and true
            a!1
            (not (<= main@%current.0.i4_1 0))
            (not (<= main@%input.0.i5_1 (- 1)))))))
(assert (and true
     true
     (= main@%_1_0 (rem main@%_0_0 10))
     (= main@%_2_0 (+ main@%_1_0 1))
     (= main@%_3_0 @unknown_0)
     (= main@%_5_0 (< main@%_2_0 main@%_4_0))
     (=> main@.lr.ph.preheader_0 (and main@.lr.ph.preheader_0 main@entry_0))
     (=> (and main@.lr.ph.preheader_0 main@entry_0) main@%_5_0)
     (=> main@.lr.ph_0 (and main@.lr.ph_0 main@.lr.ph.preheader_0))
     main@.lr.ph_0
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_0 main@%_2_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0) (= main@%i.0.i3_0 1))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%input.0.i5_1 main@%input.0.i5_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%current.0.i4_1 main@%current.0.i4_0))
     (=> (and main@.lr.ph_0 main@.lr.ph.preheader_0)
         (= main@%i.0.i3_1 main@%i.0.i3_0))))
(check-sat)

verify horn rule : (verifier.error true true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!true))&&(!true)))||(((true&&(!true))&&true)&&true))||(((true&&true)&&(!true))&&true))||(((true&&true)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not true) (not true))
               (and (and true (not true)) true true)
               (and (and true true) (not true) true)
               (and (and true true) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error true false true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!true))&&(!false))&&(!true)))||(((true&&(!true))&&false)&&true))||(((true&&true)&&(!false))&&true))||(((true&&true)&&false)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not true)) (not false) (not true))
               (and (and true (not true)) false true)
               (and (and true true) (not false) true)
               (and (and true true) false true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false true true) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!true))&&(!true)))||(((true&&(!false))&&true)&&true))||(((true&&false)&&(!true))&&true))||(((true&&false)&&true)&&true)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not true) (not true))
               (and (and true (not false)) true true)
               (and (and true false) (not true) true)
               (and (and true false) true true))))
  (not a!1)))
(assert true)
(check-sat)

verify horn rule : (verifier.error false false false) <- true
clean body
Generate Initial Program State Samples
generate positive samples 
trying to add some counterexamples
Verification condition: ((((true||(((true&&(!false))&&(!false))&&(!false)))||(((true&&(!false))&&false)&&false))||(((true&&false)&&(!false))&&false))||(((true&&false)&&false)&&false)) <- true
smt formula
(assert (let ((a!1 (or true
               (and (and true (not false)) (not false) (not false))
               (and (and true (not false)) false false)
               (and (and true false) (not false) false)
               (and (and true false) false false))))
  (not a!1)))
(assert true)
(check-sat)

************** CHCs Solved in 1.597801e+00 (secs) **************

************** Program is correct **************
REL: (verifier.error V_0 V_1 V_2) -- invariant size: 1, 2, 
REL: (main@entry V_0) -- invariant size: 1, 
REL: (main@.lr.ph V_0 V_1 V_2 V_3) -- invariant size: 4, 
REL: main@verifier.error.split -- invariant size: 1, 
************** Program Correctness End **************

************** Learning Statistics **************:
Total CHC size: 9
Total Relation size: 4
Total Var size: 69
Neg sample size: 18
Pos sample size: 3
Total sample size: 21
Iteration number: 33
************** Learning Statistics End **************

unsat
Function: main
main@entry: true
main@.lr.ph:
		(!(((1*main@%input.0.i5)+(1*main@%current.0.i4))<=1))
	(!(main@%input.0.i5<=-1))
	(!(main@%current.0.i4<=0))
main@verifier.error.split: false


************** BRUNCH STATS ***************** 
BRUNCH_STAT Result TRUE
BRUNCH_STAT Horn 0.01
BRUNCH_STAT HornClauseDB::loadZFixedPoint 0.00
BRUNCH_STAT HornifyModule 0.00
BRUNCH_STAT ICE inv 0.57
BRUNCH_STAT LargeHornifyFunction 0.00
BRUNCH_STAT seahorn_total 0.59
************** BRUNCH STATS END ***************** 
